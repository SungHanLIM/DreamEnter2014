#include <DS1302.h>
#include <LiquidCrystal.h>

// DS1302와 연결되는 아두이노 핀 번호
const int kCePin   = 8;   // Chip Enableconst
int kIoPin   = 7;   // Input/Outputconst
int kSclkPin = 6;   // Serial Clock

//  DS1302 오브젝트 생성
DS1302 rtc(kCePin, kIoPin, kSclkPin);

// LCD 핀번호 초기화LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

// 요일 코드에 알맞는 문자열 출력
String dayAsString(const Time::Day day) {
  switch (day) {
    case Time::kSunday: return "SUN";
    case Time::kMonday: return "MON";
    case Time::kTuesday: return "TUE";
    case Time::kWednesday: return "WED";
    case Time::kThursday: return "THU";
    case Time::kFriday: return "FRI";
    case Time::kSaturday: return "SAT";  
    }
  return "";
}

// 날짜, 시간 출력
void printTime() {
  // 칩에 저장된 시간을 읽어옵니다.
  Time t = rtc.time();
  
  // 요일 코드에 알맞는 문자열 가져오기
  const String day = dayAsString(t.day);
  
  // 날짜 출력
  char buf[20];
  snprintf(buf, sizeof(buf), "%04d-%02d-%02d %s", t.yr, t.mon, t.date, day.c_str());
  lcd.setCursor(1, 0);
  lcd.print(buf);
  
  // 시간 출력
  snprintf(buf, sizeof(buf), "%02d:%02d:%02d", t.hr, t.min, t.sec);
  lcd.setCursor(3, 1);
  lcd.print(buf);
}


void setup() {
  Serial.begin(9600);
  
  // 새로운 날짜와 시간 정보를 칩에 저장합니다.
  // 이 작업은 시간을 맞출때만 사용하며, 평상시에는 주석(//) 처리되어 있어야 합니다.
  // rtc.writeProtect(false);  // rtc.halt(false);
  // Time t(2017, 6, 17, 14, 49, 00, Time::kSaturday);
  // rtc.time(t);
  
  // 사용된 LCD의 글자수
  lcd.begin(16, 2);
}

// 1초마다 날짜와 시간을 출력합니다.
void loop() {
  printTime();
  delay(1000);
}
